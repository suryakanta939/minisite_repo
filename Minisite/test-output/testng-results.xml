<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="6" failed="0" total="6" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3797" started-at="2016-01-11T08:57:57Z" finished-at="2016-01-11T08:58:01Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3797" started-at="2016-01-11T08:57:57Z" finished-at="2016-01-11T08:58:01Z">
      <class name="TestNgLib.slug">
        <test-method status="PASS" signature="configbeftes()[pri:0, instance:TestNgLib.slug@27f674d]" name="configbeftes" is-config="true" duration-ms="18" started-at="2016-01-11T14:27:57Z" finished-at="2016-01-11T14:27:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configbeftes -->
        <test-method status="FAIL" signature="configTest()[pri:0, instance:TestNgLib.slug@27f674d]" name="configTest" is-config="true" duration-ms="0" started-at="2016-01-11T14:27:57Z" finished-at="2016-01-11T14:27:57Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
Command duration or timeout: 379 milliseconds
Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44'
System info: host: 'ad-PC', ip: '192.168.1.10', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_45'
Driver info: org.openqa.selenium.remote.RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
Command duration or timeout: 379 milliseconds
Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44'
System info: host: 'ad-PC', ip: '192.168.1.10', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_45'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:128)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:155)
	at TestNgLib.slug.configTest(slug.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:601)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:109)
	at org.openqa.selenium.chrome.ChromeDriverService.access$0(ChromeDriverService.java:1)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:138)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)
	at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)
	at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)
	at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)
	at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configTest -->
        <test-method status="SKIP" signature="slugcreate()[pri:0, instance:TestNgLib.slug@27f674d]" name="slugcreate" duration-ms="1" started-at="2016-01-11T14:27:59Z" finished-at="2016-01-11T14:27:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- slugcreate -->
        <test-method status="SKIP" signature="configAftermtehod()[pri:0, instance:TestNgLib.slug@27f674d]" name="configAftermtehod" is-config="true" duration-ms="0" started-at="2016-01-11T14:27:59Z" finished-at="2016-01-11T14:27:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAftermtehod -->
        <test-method status="SKIP" signature="configTest()[pri:0, instance:TestNgLib.slug@27f674d]" name="configTest" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configTest -->
        <test-method status="SKIP" signature="checkCreatedslug(java.lang.String, java.lang.String)[pri:0, instance:TestNgLib.slug@27f674d]" name="checkCreatedslug" duration-ms="1" started-at="2016-01-11T14:28:01Z" data-provider="readslugname" finished-at="2016-01-11T14:28:01Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCreatedslug -->
        <test-method status="SKIP" signature="configAftermtehod()[pri:0, instance:TestNgLib.slug@27f674d]" name="configAftermtehod" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAftermtehod -->
        <test-method status="SKIP" signature="configTest()[pri:0, instance:TestNgLib.slug@27f674d]" name="configTest" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configTest -->
        <test-method status="SKIP" signature="checkCreatedslug(java.lang.String, java.lang.String)[pri:0, instance:TestNgLib.slug@27f674d]" name="checkCreatedslug" duration-ms="0" started-at="2016-01-11T14:28:01Z" data-provider="readslugname" finished-at="2016-01-11T14:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[suryakanta4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ADSDF]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCreatedslug -->
        <test-method status="SKIP" signature="configAftermtehod()[pri:0, instance:TestNgLib.slug@27f674d]" name="configAftermtehod" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAftermtehod -->
        <test-method status="SKIP" signature="configTest()[pri:0, instance:TestNgLib.slug@27f674d]" name="configTest" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configTest -->
        <test-method status="SKIP" signature="checkCreatedslug(java.lang.String, java.lang.String)[pri:0, instance:TestNgLib.slug@27f674d]" name="checkCreatedslug" duration-ms="1" started-at="2016-01-11T14:28:01Z" data-provider="readslugname" finished-at="2016-01-11T14:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[suryakanta5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ASASVD]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCreatedslug -->
        <test-method status="SKIP" signature="configAftermtehod()[pri:0, instance:TestNgLib.slug@27f674d]" name="configAftermtehod" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAftermtehod -->
        <test-method status="SKIP" signature="configTest()[pri:0, instance:TestNgLib.slug@27f674d]" name="configTest" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configTest -->
        <test-method status="SKIP" signature="checkCreatedslug(java.lang.String, java.lang.String)[pri:0, instance:TestNgLib.slug@27f674d]" name="checkCreatedslug" duration-ms="1" started-at="2016-01-11T14:28:01Z" data-provider="readslugname" finished-at="2016-01-11T14:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[suryakanta6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[VWERER]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCreatedslug -->
        <test-method status="SKIP" signature="configAftermtehod()[pri:0, instance:TestNgLib.slug@27f674d]" name="configAftermtehod" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAftermtehod -->
        <test-method status="SKIP" signature="configTest()[pri:0, instance:TestNgLib.slug@27f674d]" name="configTest" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configTest -->
        <test-method status="SKIP" signature="checkCreatedslug(java.lang.String, java.lang.String)[pri:0, instance:TestNgLib.slug@27f674d]" name="checkCreatedslug" duration-ms="0" started-at="2016-01-11T14:28:01Z" data-provider="readslugname" finished-at="2016-01-11T14:28:01Z">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCreatedslug -->
        <test-method status="SKIP" signature="configAftermtehod()[pri:0, instance:TestNgLib.slug@27f674d]" name="configAftermtehod" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configAftermtehod -->
        <test-method status="SKIP" signature="configaftertest()[pri:0, instance:TestNgLib.slug@27f674d]" name="configaftertest" is-config="true" duration-ms="0" started-at="2016-01-11T14:28:01Z" finished-at="2016-01-11T14:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- configaftertest -->
      </class> <!-- TestNgLib.slug -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
