<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="ad-PC" name="Default test" tests="6" failures="0" timestamp="11 Jan 2016 08:58:01 GMT" time="3.797" errors="0">
  <testcase name="@BeforeMethod configTest" time="0.0" classname="TestNgLib.slug">
    <failure type="org.openqa.selenium.WebDriverException" message="The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
Command duration or timeout: 379 milliseconds
Build info: version: &amp;apos;2.47.1&amp;apos;, revision: &amp;apos;unknown&amp;apos;, time: &amp;apos;2015-07-30 11:02:44&amp;apos;
System info: host: &amp;apos;ad-PC&amp;apos;, ip: &amp;apos;192.168.1.10&amp;apos;, os.name: &amp;apos;Windows 7&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.1&amp;apos;, java.version: &amp;apos;1.8.0_45&amp;apos;
Driver info: org.openqa.selenium.remote.RemoteWebDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
Command duration or timeout: 379 milliseconds
Build info: version: '2.47.1', revision: 'unknown', time: '2015-07-30 11:02:44'
System info: host: 'ad-PC', ip: '192.168.1.10', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_45'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:128)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:155)
	at TestNgLib.slug.configTest(slug.java:53)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:517)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:601)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
Caused by: java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
	at com.google.common.base.Preconditions.checkState(Preconditions.java:197)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:109)
	at org.openqa.selenium.chrome.ChromeDriverService.access$0(ChromeDriverService.java:1)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:138)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.server.DefaultDriverProvider.callConstructor(DefaultDriverProvider.java:103)
	at org.openqa.selenium.remote.server.DefaultDriverProvider.newInstance(DefaultDriverProvider.java:97)
	at org.openqa.selenium.remote.server.DefaultDriverFactory.newInstance(DefaultDriverFactory.java:60)
	at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:222)
	at org.openqa.selenium.remote.server.DefaultSession$BrowserCreator.call(DefaultSession.java:1)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at org.openqa.selenium.remote.server.DefaultSession$1.run(DefaultSession.java:176)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod configTest -->
  <testcase name="@AfterMethod configAftermtehod" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @AfterMethod configAftermtehod -->
  <testcase name="@BeforeMethod configTest" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @BeforeMethod configTest -->
  <testcase name="@AfterMethod configAftermtehod" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @AfterMethod configAftermtehod -->
  <testcase name="@BeforeMethod configTest" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @BeforeMethod configTest -->
  <testcase name="@AfterMethod configAftermtehod" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @AfterMethod configAftermtehod -->
  <testcase name="@BeforeMethod configTest" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @BeforeMethod configTest -->
  <testcase name="@AfterMethod configAftermtehod" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @AfterMethod configAftermtehod -->
  <testcase name="@BeforeMethod configTest" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @BeforeMethod configTest -->
  <testcase name="@AfterMethod configAftermtehod" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @AfterMethod configAftermtehod -->
  <testcase name="@BeforeMethod configTest" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @BeforeMethod configTest -->
  <testcase name="@AfterMethod configAftermtehod" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @AfterMethod configAftermtehod -->
  <testcase name="@AfterTest configaftertest" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- @AfterTest configaftertest -->
  <testcase name="slugcreate" time="0.001" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- slugcreate -->
  <testcase name="checkCreatedslug" time="0.001" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- checkCreatedslug -->
  <testcase name="checkCreatedslug" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- checkCreatedslug -->
  <testcase name="checkCreatedslug" time="0.001" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- checkCreatedslug -->
  <testcase name="checkCreatedslug" time="0.001" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- checkCreatedslug -->
  <testcase name="checkCreatedslug" time="0.0" classname="TestNgLib.slug">
    <skipped/>
  </testcase> <!-- checkCreatedslug -->
</testsuite> <!-- Default test -->
